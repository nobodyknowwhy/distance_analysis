【1】
原子性（Atomicity）

原子性意味着事务中的所有操作要么全部成功，要么全部失败。如果事务中的任何操作失败，整个事务将回滚到开始状态，就像这个事务从未执行过一样。这确保了事务是一个不可分割的工作单位。

一致性（Consistency）

一致性确保数据库在事务开始之前和结束之后保持一致状态。所有事务必须遵守数据库的规则，包括数据的完整性约束。无论事务的结果如何，数据库都必须保持一致性。

隔离性（Isolation）

隔离性保证了事务的独立性。即使多个事务同时执行，每个事务的操作和数据对其他事务都是隔离的。这避免了多个事务并发执行时可能出现的数据不一致问题。

持久性（Durability）

持久性意味着一旦事务提交，它对数据库的更改就是永久性的。即使发生系统故障，已提交的事务也不会丢失。


【2】
python当中，_var单划线一般代表临时变量，__var双划线一般代表私有变量


【3】
__slots__ 的主要目的是优化内存占用，通过限制类实例的属性来减少内存消耗。虽然它确实限制了属性，但这是实现内存优化的手段，而非最终目的。


【4】
1. 端口 80
用途：HTTP（超文本传输协议）
描述：用于未加密的 Web 流量，是大多数网站的默认端口。
2. 端口 443
用途：HTTPS（超文本传输安全协议）
描述：用于加密的 Web 流量，是 HTTPS 的默认端口，广泛用于安全的 Web 通信。
3. 端口 8080
用途：HTTP 代理或备用 HTTP 端口
描述：通常用作 HTTP 的备用端口，特别是在开发环境中或当 80 端口被占用时。
4. 端口 22
用途：SSH（安全外壳协议）
描述：用于安全的远程登录和命令行会话，广泛用于服务器管理和配置。


当 try 和 finally 块中都有 return 时，finally 的返回值会覆盖 try 的返回值，因此输出 "finally"。

元类（Metaclass）控制类的创建行为（如动态修改类属性），而非实例的创建（实例由类的 __new__ 和 __init__ 控制）。

前缀树（Trie）专为高效存储和检索字符串设计（如自动补全、词频统计），而非数组操作。

EXPLAIN 用于查看查询的执行计划（如索引使用情况），帮助优化 SQL 性能，而非修改表结构。

幻读（Phantom Read）指同一事务中多次查询结果集不一致（新增/删除的行），Repeatable Read 隔离级别无法避免，需 Serializable。

输入验证和参数化查询可防御 SQL 注入（防止恶意 SQL 拼接），DDoS 需流量清洗和限流。

WebSocket 用于实时双向通信（如聊天室、股票行情），加密由 SSL/TLS 处理，非其核心用途。

